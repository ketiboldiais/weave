abstract class NumericScale {
  domain: [number, number];
  range: [number, number];
  minValue: number;
  maxValue: number;
  scaleMin: number;
  scaleMax: number;
  constructor(
    domain: [number, number],
    range: [number, number]
  ) {
    this.domain = domain;
    this.range = range;
    this.minValue = domain[0];
    this.maxValue = domain[1];
    this.scaleMin = range[0];
    this.scaleMax = range[1];
  }
}
class LinearScale extends NumericScale {
  ratio: number;
  constructor(
    domain: [number, number],
    range: [number, number]
  ) {
    super(domain, range);
    this.ratio =
      (this.scaleMax - this.scaleMin) /
      (this.maxValue - this.minValue);
  }
  scale(value: number) {
    const result =
      this.scaleMin + this.ratio * (value - this.minValue);
    if (result === Infinity) return this.scaleMax;
    else if (result === -Infinity) return this.scaleMin;
    return result;
  }
}
const linearScale = (
  domain: [number, number],
  range: [number, number]
) => new LinearScale(domain, range);

const linear = linearScale([-5, 5], [0, 300]);

